@using umbraco.cms.businesslogic.template
@using umbraco.MacroEngines
@using uComponents.Core
@using uComponents.Core.uQueryExtensions
@using System.Linq
@using VP2.businesslogic
@using System.Web

@helper SignupForm()
    {
    <div id="rhs-register">
        <h2>Get Newsletters from VOD Professional</h2>
        <div class="rhs-form-signin" role="form">
            <input type="email" class="form-control" id="rhs-email-reg" placeholder="Email address" required>
            <button class="btn btn-lg btn-primary btn-block" type="submit" id="rhs-register-btn">Start Registration</button>
        </div>
    </div>
}
@helper Sponsors()
    {
        bool hide = false;
        if (@Model.hideSponsors.GetType() == typeof(Boolean))
        {
            hide = @Model.hideSponsors;
        }
        if (!hide)
        {
            if (@Model.AncestorOrSelf().sponsors.GetType() == typeof(umbraco.MacroEngines.DynamicXml))
            {
                var sponsorIDs = @Model.AncestorOrSelf().sponsors.GetEnumerator();
    
        <div id="sponsors">
            <h2>Site Sponsors</h2>
            <div class="sponsor-items">
            @foreach (var sponsorID in @sponsorIDs)
            {
                dynamic sponsor = @Model.NodeById(@sponsorID.InnerText);
                string sponsorurl = "#";
                if (sponsor.sponsorStory.GetType() == typeof(System.Int32))
                {
                    sponsorurl = umbraco.library.NiceUrl(sponsor.sponsorStory);
                }
                else if (sponsor.sponsorUrl.GetType() == typeof(System.String))
                {
                    sponsorurl = @sponsor.sponsorUrl;
                }
                <div><a href="@sponsorurl"><img src="@sponsor.sponsorImage" /></a></div>
            }
            </div>
        </div>
            }
        }
}
@helper MPU()
    {
    <div id="mpu">
        <script type='text/javascript'>
            GA_googleFillSlot("VOD_PRO_MPU_ROS");
        </script>
    </div>
}
@helper NewHere()
    {
    var teaserIDs = @Model.AncestorOrSelf().teasers.GetEnumerator();
    int count = 0;
     
    <div id="new-here">
        <h2>New Here? Start With These</h2>
        <ul>  
        @foreach (var teaserID in @teaserIDs)
        {
            <li>
            @{
                count++;
                dynamic teaser = @Model.NodeById(@teaserID.InnerText);
                if (count < 10)
                {
                    <div class="expanded-item">
                    <a href="@teaser.Url">@teaser.title</a>
                    <div>
                        @if (teaser.GetProperty("storyimage").Value.Length > 0)
                        {
                            dynamic media = @Model.MediaById(@teaser.GetProperty("storyimage").Value);
                            string mediaName = @media.umbracoFile;
                            string thumbName = @mediaName.Replace(".jpg", "_thumb_195.jpg");
                            <img src="@mediaName" />
                        }
                        <span>@teaser.miniTeaser</span>
                    </div>
                    </div>
                }
                else
                {
                    <a href="@teaser.Url">@teaser.title</a>
                }
            }
            </li>
        }
        </ul>
    </div>
}
@helper MostPopular()
    {
        var teaserIDs = @Model.AncestorOrSelf().mostPopular.GetEnumerator();
        int count = 0;
        if (@Model.AncestorOrSelf().mostPopular.InnerText != "")
        {
        <div id="most-popular">
            <h2>Most Popular</h2>
            <ul>
            @foreach (var teaserID in @teaserIDs)
            {
                <li>
                @{
                count++;
                dynamic teaser = @Model.NodeById(@teaserID.InnerText);
                if (count < 10)
                {
                      <div class="expanded-item">
                        <a href="@teaser.Url">@teaser.title</a>
                        <div>
                            @if (teaser.GetProperty("storyimage").Value.Length > 0)
                            {
                                dynamic media = @Model.MediaById(@teaser.GetProperty("storyimage").Value);
                                string mediaName = @media.umbracoFile;
                                string thumbName = @mediaName.Replace(".jpg", "_thumb_195.jpg");
                                <img src="@mediaName" />
                            }
                            <span>@teaser.miniTeaser</span>
                        </div>
                      </div>
                }
                else
                {
                        <a href="@teaser.Url">@teaser.title</a>
                }
                }
                </li>
            }
            </ul>
        </div>
        }
}
@helper Jobs()
    {
  <div id="jobs">  
    
    <div class="jobadvertise">
      <h2 class="nobottomborder">VOD Jobs from <img src="/_inc/VP2014/img/jobserve.png" /></h2>
    </div>
    <ul>
    @{    
        VPJobs jobs = new VPJobs();
        jobs.PopulateJobList(0, 20);
        foreach (Job j in jobs.JobList)
        {
          <li>
            <div class="jobtitle"><a href="@j.Url">@j.Title</a></div>
            <div class="joblocation">@j.Location</div>
            <div class="jobsalary">@j.Rate</div>
          </li>
        }
    }   
    </ul> 
    <div class="jobfoot">
      <div class="jobpost"><a target="_blank" title="Advertise on JobServe" href="http://www.jobserve.com/gb/en/Recruiter/QuickJobProductSelect.aspx">&lt; Post a Job</a></div>
      <div class="jobmore"><a href="/jobs/">More Jobs &gt;</a></div>
    </div>
  </div>
}
@helper VPAd()
    {
<div id="vui-service-sheet">
  <div class="header">  
    <div class="strapline">
        <h2>VOD Service of the Day</h2>
        <h3>Data from VOD Professional's VUI Library</h3>
    </div>
    <div class="link">
        <a href="/vui">Subscribe today</a>
    </div>
  </div>
  <div class="loading">
    <img src="/_inc/VP2014/img/loading.gif" height="30"/>
  </div>
</div>

<div id="vui-service-sheet-template">
  <article>
    <header>
        <h1></h1>
        <div class="intro">
            <div class="b-info">
                <div class="img">
                  <img src="" />
                </div>
                <div class="table">
                  <table border="0">
                    <tbody><tr>
                        <th>Availability</th>
                        <td data-name="availability"></td>
                    </tr>
                    <tr>
                        <th>Pay Model</th>
                        <td data-name="pay-model"></td>
                    </tr>
                    <tr class="last">
                        <th>Category</th>
                        <td data-name="category"></td>
                    </tr>
                    </tbody></table>
                </div>
            </div>
        </div>
    </header>
    <div class="b-stats">
      <div class="inner">
        <ul>
          <li data-name="screenshots">
            <div>
              <div class="count">
                <span class="data-point"></span><span class="fa fa-camera"></span>
              </div>
              <div class="title">
                Screenshots from <span class="num-devices"></span> devices
              </div>
            </div>
          </li>
          <li data-name="facebook">
            <div>
              <div class="count">
                <span class="data-point"></span><span class="fa fa-thumbs-o-up"></span>
              </div>
              <div class="title">
                Facebook likes
              </div>
            </div>
          </li>
          <li data-name="benchmark">
            <div>
              <div class="count">
                <span class="data-point"></span><i>/25</i><span class="fa fa-bar-chart-o"></span>
              </div>
              <div class="title">
                Average benchmark score
              </div>
            </div>
          </li>
          <li data-name="twitter">
            <div>
              <div class="count">
                <span class="data-point"></span><span class="fa fa-twitter"></span>
              </div>
                <div class="title">
                Twitter Followers
                </div>
            </div>
          </li>
          <li data-name="rating">
            <div>
              <div class="count">
                <span class="data-point"></span><i>/5</i><span class="fa fa-star-o"></span>
              </div>
              <div class="title">
                Average User Rating from iTunes App Store &amp; Google Play
              </div>
            </div>
          </li>
          <li data-name="youtube">
            <div>
              <div class="count">
                <span class="data-point"></span><span class="fa fa-youtube"></span>
              </div>
              <div class="title">
                YouTube Subscribers
              </div>
            </div>
          </li>
        </ul>
        </div>
    </div>            
    <div class="b-screenshots">
        <h2>Selected Screenshots</h2>
        <span class="lightbox-ctrl lightbox-prev fa fa-angle-left"></span>
        <span class="lightbox-ctrl lightbox-next fa fa-angle-right"></span>
        <div class="carousel">
            <ul>
            </ul>
        </div>
        <span id="vui-service-screenshot-template">
            <li>
                <span class="name"></span>
                <span class="device"></span>
                <span class="img">
                <a href=""><img src=""></a></span> <!--  data-lightbox="vui-images" added in jQuery -->
            </li>
        </span>
    </div>
  </article>            
</div>                     
}

@functions
{    
    string currentTemplate = "";
    Dictionary<string, string[]> templateElementMap;
}
@{    
    currentTemplate = new Template(@Model.template).Alias;
    VPRHSManager rhsManager = new VPRHSManager(currentTemplate);

    if (Model.hideRHSide.GetType() != typeof(System.Boolean) || (Model.hideRHSide.GetType() == typeof(System.Boolean) && !Model.hideRHSide))
    {
        foreach (string section in rhsManager.SectionsToShow)
        {
            if (section.Equals("SIGNUP"))
            {
                if(Model.hideRHEmailSignup.GetType() != typeof(System.Boolean) || (Model.hideRHEmailSignup.GetType() == typeof(System.Boolean) && !Model.hideRHEmailSignup))
                {
                 @: @SignupForm()
                }
            }
            if (section.Equals("SPONSORS"))
            {
                if (Model.hideSponsors.GetType() != typeof(System.Boolean) || (Model.hideSponsors.GetType() == typeof(System.Boolean) && !Model.hideSponsors))
                {
                 @: @Sponsors()
                }
            }
            if (section.Equals("VPAD"))
            {
                if (Model.hideRHVUIAd.GetType() != typeof(System.Boolean) || (Model.hideRHVUIAd.GetType() == typeof(System.Boolean) && !Model.hideRHVUIAd))
                {
                 @: @VPAd()
                }
            }
            if (section.Equals("NEWHERE"))
            {
                if (Model.hideRHNewHere.GetType() != typeof(System.Boolean) || (Model.hideRHNewHere.GetType() == typeof(System.Boolean) && !Model.hideRHNewHere))
                {
                 @: @NewHere()
                }
            }
            if (section.Equals("MPU"))
            {
                if (Model.hideRHMPU.GetType() != typeof(System.Boolean) || (Model.hideRHMPU.GetType() == typeof(System.Boolean) && !Model.hideRHMPU))
                {
                 @: @MPU()
                }
            }
            if (section.Equals("JOBS"))
            {
                if (Model.hideRHJobs.GetType() != typeof(System.Boolean) || (Model.hideRHJobs.GetType() == typeof(System.Boolean) && !Model.hideRHJobs))
                {
                 @: @Jobs()
                }
            }
            if (section.Equals("MOSTPOPULAR"))
            {
                if (Model.hideRHMostPopular.GetType() != typeof(System.Boolean) || (Model.hideRHMostPopular.GetType() == typeof(System.Boolean) && !Model.hideRHMostPopular))
                {
                 @: @MostPopular()
                }
            }
        }
    }
}
